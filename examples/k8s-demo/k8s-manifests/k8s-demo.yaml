apiVersion: v1
kind: Namespace
metadata:
  name: k8s-demo

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-demo-config
  namespace: k8s-demo
  labels:
    app: k8s-demo
data:
  "MY_FOO": "bar"

---

apiVersion: v1
kind: Secret
metadata:
  name: k8s-demo-secret
  namespace: k8s-demo
type: kubernetes.io/dockerconfigjson
data:
  #.dockerconfigjson: <OCKERCONFIG_JSON>
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSIxNTMwNTI5NTQxMDMuZGtyLmVjci51cy1lYXN0LTIuYW1hem9uYXdzLmNvbSI6IHsKCQkJImF1dGgiOiAiUVZkVE9tVjVTbmRaV0d4ellqSkdhMGxxYjJsT1JrcG9URE5qTkdKclVraGlNamcxWlVkU2FWUnVVa0prYTJSVFpFaHNSMkV4Y0hCaVNHZ3hUbTFvY2xGdVpHeFBWemx5V2pJeFZWTllSVEpYVldONFYwVTVlbEpzYUhOUlZFSXlZbGRLUTFwWWNGTk5SMmMxWXpCc1RtRkZVbmhWTTJ4M1lteENhbU5HVWsxU2JFWjVZVzVXVUU5SVpIZFphMFY2V2pCU01tUlhOV3hVTVd4NldrWkZkMVJIVWxaTU1sSktUVlJrTkdSNldYaE5TRlp6WldwR1NVMHdTbWxWYWxKSVpWZFNWV05JVW1GT1dFazFUMGRTUzFkdWJGVmhSRXBhVVZVeE1WUkdhM1pPUmtwR1REQjRVRkpWUm10WGJscG9WMGhvYUZZd1dtaFdNazVSVTI1Q2EyUnBPSEprUjBaRlpGVjRXV1F5VmtkalJURlVUREEwTkZSR1ZsSmlha2w2VWtad1VWSkVTWEpWUmtvMlREQldjVlpYWnpST1YwbDJUMFYwTWxWNlVtbGxWbGt4WkZaQ1lWbHFZM2hYV0ZaTVZGYzFObHBzVG5kWlZrSjRZVVpvV2xaVVRsWlJiRTB3VDBjd2VtUnJaRmRpUm1SeVQxZFNXbHBFVm5GU2JrcHBVMWRuTkUxSVRrMVJWV1IwVFVkd2FHSnJjRmxrUkVaMlZGVnNTV1I1ZEVWbFZXUkhUMGN3Y21KclNrUkxNbVJJWVZkc1RGcFVWa05hV0UxMlVqRkdjR1ZyT1RWYVZrcHFaREpTU0dNeFVqUlJha0p4VFRORmRsVkZSbnBWUjJSb1pFVktibFp0WkZsbGJIQldXVmhhVDJGRVVUVlNhMXBvWWtjMVJsa3pWbHBqV0VaMFpFYzFOVlo2V2pGVFZVVXlZa1JKTUdKV1FucGhXRUpTV1RCa00xa3dTWGxsYVRsWVdqSnNiR05HVGs1a1dFbzJWRlZhVlU5R1VtcGpNVVpQVldwc2FXRkdTa1ZOYkZaVVlsWm9jMkZHUW5oaGEzaEdXbGhHTmsxclZrWlVWelV6V2taYWJWVlViREZXVlZreVN6TnNSMVZ1Um5wbGExSlJUVEJLV2s1SFdsTlZSV2hDVW0weFRrNUZiRlJVUmtKUFVraGpNbEpYTldoVGJUUTBaV3RPUkZkSWJIWlVWVkpQV20xa2VHTldaRlJhU0doeVZVWlZkMVl3TkRWV00wRjZUVVZXUlZWVmFHbFdiVXBaVVZkV1ZHTXhiRE5YVjJodlRWWktXVTVJYUhwYVJsWjVZMVZ3UzFvd05IWlRiVEZyVWtaR1dGWkZaRTlrUlVVeldqTndNV1ZIYUd4aFZUa3hUa1ZvYjAwelNqVlNWbEo0VVZkc1ZtUnRUa1psUjBaMVkwZHNWMU13YjNoUlZFVjNWRVU1TVUxRmJHbE5iWGh4VWxWU2FrOVRkRVpYU0doUVpEQTFiazVHVVhsT01HZzJUV3hLVjFVeWFIQmFhMDE1VW0xMFlWWkhjRmxOZWsxM1UyMUdVbEl4WkhkYVdHZzFWRlJzVTJOSVRqTmxXR2g0VFdwUmVGSXdaekpWYlhNd1ZWTjBXV1F3YUZOaGJrWjVUMWN4TTA5SGIzSlVNVlpWVVZSV2NGb3hSalJSYkdoUVZsYzBlVTFJWkZaWFIzaDRVV3RPTmxGNlZucGtNR042VDFoamRtTXdjSEpqTTBKSlVqQmpkbUV3Wkd0alJscEdaRmhXU1ZKVmJ6Qmtia0pDVFdwS1VXUllSbXhXZW1SU1lXeG9WazFVUWtWbFJYUTFXa1paTWxkR1JsZE5hMDVZWWtob1UyTjZXbWxpTWxaUlVtMVdOVmt3TlZGa01sWmFZVEJhY1ZkcVRuaFNNR2hZVmxWc2JsWkdhSFpUUjBaS1lXdDBlbFp1UmtkU01taG9VbFpDYVZGdFdrOWFNazR3VjBkV2JGSXpXbUZrYTFVd1pGWm9jRTFXVFRWV00xSk5UVEl4WVdGNlNuTmxXRVkyVkRJMGVWWnJNRE5UVkU1SFlqSkthR016V21GaWEyUkVaRVpzTUZwR2JETlRWV3h5Vm1wa1EyTklWbGRoYW1oSFVWaEtVMk15YkdwVmJGSTBUMWhLVTFadVFsVmxSbFpNWTBaT01Wa3lXbWxXVm13MVlUSXhkV05FUWpKV1JrWXhZbnBKTlZsWGVIQlNhMmhMVjBWc1QyTkVSbFJSV0UweVpHNVZkbGRZYURKYU1uTjRWRVZTTmxRd05WQmtiWEJXVm1sMGFWa3lhRWxTUjJSVlZucHNXbEpzU25sUmFsRjRXVEJaZDFwWFRuQk5NV3hhVFd4Q2JWbDZWWGRUVjJ4MlpWWk9iMUZYWkhCamVsVjJVbGRzYkdSV1VuaGFNbk13Vkd4d1dGWXpielZpUjNNelRsUktORmxyUmtaaFJtODFWRE5hWVZKcWFIRmthMlJIVjFoc1ZGTkVRVEJhYTBaNFZUSjRSbHBIZEd4a00wSjVaRE5vU2xSSVVrUmhNRFYyVERKa1YxRXdiSHBVVjFaS1pGaFNWbUp1V2xoV2FtY3hWakprYzFGWVZYcGxiWE41WWtWNGNGZElTa3RWTVZwWVRYcHNhbGxYU214YVNHaDVWbXBrUkVzeVJrTmlTRTVRVVROT2IwNVlWak5hYm5CVVNXbDNhVnBIUmpCWlYzUnNaVk5KTmtsclJsSlNWVXBDVTBkd1EwNTVPWEJhTTJST1ducFNUMVZJWkdoa1dFbzBWVEJzV21WRVVrbGFiVFUwWkZWa2FreDZVVFJaYTFJelpHNWtSV05GTlZwV01YQnVVVlZHUWxORVVqTmFhMFphVTJ0MGRsZHJiRzlrYlU1UFVWWkdhbEl5T1VoUFNHUnBWVlZzUTFGVlVrTmlNRXB1WVROR2IyRXliRWhQV0dOM1VXdEtNMUpZWkVsYU1XeExWMVZzWVZOVlJsaFdWVkpEVVZWV01WUlZTa1pTVlZKUllrUm9OVmxyV1RGUFdFcGFWMVp3VTJGR1pFNVZWV3hEVWxWc1FrNHlPV3ROYWxKVVRtMWFhbEpYVGxOaWJYTXdWMVphU0ZWV2JHNVZiRlpFV1ZjME1tUkZPVXhPU0VKNVZWaFNhVTVzU2sxVE0yUXdVMVJHYjA0elRtcE9iVFZvVjJ0YVIxTXdXWGRPVmxreFltMTNOVkl5VWxWVFZUbFBWa1phYVZaR2NIaFBSMmhPWkd4ck9VbHBkMmxrYlZaNVl6SnNkbUpwU1RaSmFrbHBURU5LTUdWWVFteEphbTlwVWtWR1ZWRldPVXhTVm10cFRFTktiR1ZJUW5CamJVWXdZVmM1ZFVscWIzaE9WRlY1VDFSak5VNVVZelJtVVQwOSIKCQl9LAoJCSJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7CgkJCSJhdXRoIjogImJXVjBjbUZzT201dmIydGxlVGRGVlE9PSIKCQl9LAoJCSJxdWF5LmlvIjogewoJCQkiYXV0aCI6ICJiV1YwY21Gc09tNXZiMnRsZVRkRlZRPT0iCgkJfQoJfSwKCSJIdHRwSGVhZGVycyI6IHsKCQkiVXNlci1BZ2VudCI6ICJEb2NrZXItQ2xpZW50LzE4LjA5LjEgKGxpbnV4KSIKCX0KfQ==

---

apiVersion: v1
kind: Service
metadata:
  name: k8s-demo
  namespace: k8s-demo
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: k8s-demo

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-demo
  namespace: k8s-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-demo
  template:
    metadata:
      labels:
        app: k8s-demo
    spec:
      imagePullSecrets:
        - name: k8s-demo-secret
      volumes:
        - hostPath:
            path: /proc
          name: proc
        - downwardAPI:
            defaultMode: 420
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
              path: metadata.name
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: metadata.namespace
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.uid
              path: metadata.uid
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.labels
              path: metadata.labels
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations
              path: metadata.annotations
          name: podinfo
      containers:
        - name: k8s-demo
          image: quay.io/metral/k8s-demo-private:0.0.1
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: MY_FOO
              valueFrom:
                configMapKeyRef:
                  key: MY_FOO
                  name: k8s-demo-config
            - name: SPEC_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: SPEC_SERVICE_ACCOUNT_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.serviceAccountName
            - name: STATUS_HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: STATUS_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: METADATA_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: METADATA_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: METADATA_UID
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.uid
          volumeMounts:
            - mountPath: /etc/podinfo
              name: podinfo
            - mountPath: /host/proc
              name: proc

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: k8s-demo
  namespace: k8s-demo
  labels:
    app: k8s-demo
  annotations:
    kubernetes.io/ingress.class: my-nginx-class
spec:
  rules:
  - host: meetup.apps.pulumi.tech
    http:
      paths:
        - path: "/foobar"
          backend:
            serviceName: k8s-demo
            servicePort: http
